"
" vimrc
"

" Settings
filetype plugin indent on
syntax on

colorscheme koehler

set backspace=indent,eol,start

set autoindent
set expandtab shiftwidth=4

set mouse=a

set number
set cursorline
set laststatus=1
set noshowmode noshowcmd
set confirm

set ignorecase smartcase
set incsearch

set noswapfile
set undofile undodir=$HOME/.vim/files/undo

set hidden

set splitright splitbelow

" Mappings
nnoremap <Space> <Nop>
let mapleader = "\<Space>"

nnoremap <leader>d "_d
nnoremap <leader>c "_d
nnoremap <leader>D "_D
nnoremap <leader>C "_C

nnoremap ]b <cmd>bnext<CR>
nnoremap [b <cmd>bprevious<CR>

nnoremap U u

nnoremap Q @q

nnoremap ZW <cmd>update<CR>

nnoremap <leader>s :%s/\\<<C-r><C-w>\\>//g<Left><Left>

nnoremap <expr> <silent> k (v:count > 5 ? "m'" . v:count : "") . "k"
nnoremap <expr> <silent> j (v:count > 5 ? "m'" . v:count : "") . "j"

nnoremap <expr> <silent> 0 getline('.')[0 : col('.') - 2] =~# '^\\s\\+$' ? '0' : '^'

vnoremap <silent> J <cmd>m '>+1<CR>gv=gv
vnoremap <silent> K <cmd>m '>-2<CR>gv=gv

" Autocmds
augroup trim_white_space
  autocmd!
  autocmd BufWritePre * %s/\s\+$//e
augroup END

augroup vimrc_incsearch_highlight
  autocmd!
  autocmd CmdlineEnter /,\? set hlsearch
  autocmd CmdlineLeave /,\? set nohlsearch
augroup END

augroup number_toggle
  autocmd!
  autocmd BufEnter,FocusGained,WinEnter * if &nu | set rnu   | endif
  autocmd BufLeave,FocusLost,WinLeave   * if &nu | set nornu | endif
augroup END
