#!/bin/bash

# Recolorize
# A script to load saved color schemes


# If you have a script to change the color of an app
# based on either .Xresources or ~/.cache/paintee
# call it inside this function
function update_apps
{
	# Bspwm
	$HOME/.config/bspwm/color_setup.sh
	
	# Polybar
	pkill -USR1 polybar
}


function usage
{
	echo -e "Usage: $( basename $0 ) [-c PATH] [-x PATH] FILE..." >&2
}

function update_colors
{
	xrdb $xresources_path 
	xrdb -merge "$color_path/$color_basename"
}

function cache_colors
{
paintee
echo -e "
Current color scheme: '$color_path/$color_basename'
Current Xresources file: '$xresources_path'
Updated: $(date)" >> ~/.cache/paintee

}

while getopts 'larc:x:' opt; do
	case "$opt" in
		l)
			for color in $color_path/*; do
				echo $(basename $color)
			done
			exit 0
			;;

		a)	cat .cache/paintee | grep "color scheme" | cut -f6 -d"/" | tr -d "'" ; exit 0	;;
		r)	;; #Placebo effect
		c)	color_path=$OPTARG		;;
		x)	xresources_path=$OPTARG	;;
		?)	usage ; exit 2			;;
	esac
done
shift "$(($OPTIND - 1))"

# Path to colorsâ€™ folder unless [-c PATH] was used
: ${color_path:=$HOME/.Xresources.d/colors}
[[ ! -d $color_path ]] && echo "$color_path is not a directory" && exit 3

# Path to Xresources unless [-x PATH] was used
: ${xresources_path:=$HOME/.Xresources}
[[ ! -f $xresources_path ]] && echo "$xresources_path is not a file" && exit 3

[[ $# -gt 1 ]] && usage && exit 1

if [[ $# -eq 1 ]]; then
	[[ ! -f $color_path/$1 ]] && echo "$color_path/$1 does not exist" && exit 3 || color_basename=$1
fi

: ${color_basename:=$(basename $(shuf -n1 -e $color_path/*))}

update_colors
cache_colors
update_apps
